#!../lpp
if (!ext),{
  throw "Your L++ interpreter does not support extend libraries.";
}
# cout
const default_output={"operator()":function(){ext print[arguments[0]]}}; # output stream is set to /bin/echo (linux)
var cout_stream=function(output=default_output){ #modify argument 'output' to redirect cout.
  if (instance this)!=cout_stream,{
    throw "'new' is required";
  };
  this["_output"]=output;#outputer
  this["operator<<"]=function(lhs,rhs){ #lhs:this stream rhs:value
    this["_output"] [rhs];
    return this;# cout<<1<<2<<...
  };
}
# cin
const default_input={"operator()":function(){return (ext getline[])}};
var cin_stream=function(input=default_input){
  if (instance this)!=cin_stream,{
    throw "'new' is required";
  };
  this["_input"]=default_input;
  this["getline"]=function(){return (this["_input"] [])};
}
const cin=(new cin_stream[]); #default cin
const cout=(new cout_stream[]); #default cout
const endl="\n"; #default endline
if (!export),{ #not import?
  cout<<"C++-like iostream test by nu11ptr"<<endl;
  cout<<"Copyright(c) 2021 nu11ptr team."<<endl;
  cout<<"Hint:Use \"import\" to import this library."<<endl;
},{
  export endl=endl;#export endl as endl
  export cout=cout;#export cout as cout
  export cin=cin;#export cin as cin
}
